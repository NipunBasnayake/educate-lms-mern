openapi: 3.0.3
info:
  title: LMS Authentication API
  version: 1.0.0
  description: Authentication APIs for the Learning Management System (LMS)
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      description: Creates a new user account with name, email, and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
              required: [name, email, password]
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                example:
                  _id: 1234567890abcdef
                  name: John Doe
                  email: john@example.com
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad request (e.g., user already exists, invalid input)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User already exists
  /api/auth/login:
    post:
      summary: Login a user
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
              required: [email, password]
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
                example:
                  _id: 1234567890abcdef
                  name: John Doe
                  email: john@example.com
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Unauthorized (invalid credentials)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Invalid email or password